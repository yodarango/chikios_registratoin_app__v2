<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" type="text/css" href="/css/fullds.min.css" />
    <link rel="stylesheet" href="/css/tokens.css" />
    <link rel="stylesheet" href="/css/app.css" />

    <style>
      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }
    </style>
    <title>registrants</title>
  </head>
  <body>
    <main>
      <div id="count">
        <h1
          class="fs-2 fw-bold my-5 border-bottom d-flex align-items-center justify-content-between"
        >
          <span>Total registrations:</span>
          <span><%= registrants.length %></span>
        </h1>
      </div>
      <div class="w-100 d-flex align-items-center justify-content-start mb-5">
        <input
          class="form_input p-3 bg-info-subtle rounded-3 w-100 me-3"
          placeholder="Search by last name"
          onkeyup="handleSearchRegistrantByNameOrId()"
          type="text"
          id="search"
        />
      </div>
      <div id="registrants-table">
        <% registrants.forEach(registrant => { %>
        <div
          data-registrant-name="<%= registrant.first_name %> <%= registrant.last_name %>"
          data-registrant-checked-in="<%= registrant.checked_in > 0%>"
          data-registrant-id="<%= registrant.id %>"
          class="card-<%= registrant.id %>"
        >
          <div
            class="p-0 mb-4 mx-0 rounded-3 card bg-gamma border border-delta"
          >
            <div
              class="d-flex align-items-center justify-content-center column-gap-2"
            >
              <a
                class="me-4 my-0 w-100 d-block"
                href="/admin/<%= registrant.id %>"
              >
                <h3 class="p-4">
                  <%= registrant.first_name %> <%= registrant.last_name %>, <%=
                  registrant.age %>
                </h3>
              </a>
              <h3
                class="bg-beta border border-alpha rounded-1 flex-shrink-0 me-4 p-2"
              >
                <%=registrant.id%>
              </h3>
            </div>
            <div
              class="flex-shrink-0 d-flex align-items-center justify-content-center"
            >
              <button
                class="color-beta px-0 py-2 m-0 bg-warning flex-grow-1 d-flex align-items-center justify-content-center"
                id="delete-<%= registrant.id %>"
                onclick="handleDeleteRegistrant('<%= registrant.id %>')"
              >
                <b>Delete</b>
              </button>
              <button
                onclick="handleCheckInOrOutRegistrant('<%= registrant.id %>', '<%= !(registrant.checked_in > 0) %>')"
                class="color-beta py-2 px-0 m-0 flex-grow-1 d-flex align-items-center justify-content-center <%= registrant.checked_in > 0 ? ' bg-success' : 'bg-danger' %>"
                id="check-status-<%= registrant.id %>"
              >
                <b><%= registrant.checked_in > 0 ? 'IN' : 'OUT'%></b>
              </button>
            </div>
          </div>
        </div>
        <% }) %>
      </div>
    </main>
  </body>

  <script>
    // filters the registrants by search
    async function handleSearchRegistrantByNameOrId(event, registrants) {
      const registrantCards = Array.from(
        document.querySelectorAll("[data-registrant-id]")
      );

      const search = document.getElementById("search").value;

      for (registrantCard of registrantCards) {
        const registrantName = registrantCard.getAttribute(
          "data-registrant-name"
        );
        const registrantId = registrantCard.getAttribute("data-registrant-id");

        if (
          registrantName.toLowerCase().includes(search.toLowerCase()) ||
          registrantId.toLowerCase().includes(search.toLowerCase())
        ) {
          registrantCard.classList.remove("d-none");
          registrantCard.classList.add("d-block");
        } else {
          registrantCard.classList.remove("d-block");
          registrantCard.classList.add("d-none");
        }
      }
    }

    async function handleCheckInOrOutRegistrant(id, status) {
      const isCheckIn = status === "true" || status === true;

      if (!id) return;

      const registrantIdBtn = document.getElementById(`check-status-${id}`);

      const registrantIdText = registrantIdBtn.querySelector(`b`);

      registrantIdBtn.classList.remove("bg-danger", "bg-success");
      registrantIdText.textContent = "Processing...";
      registrantIdBtn.classList.add("bg-rho");

      const path = `/admin/${isCheckIn ? "check-in" : "check-out"}/` + id;

      try {
        const req = await fetch(path, {
          method: "POST",
        });
        const res = await req.json();

        if (!res.success) {
          alert("An error occurred, please try again.");
          return;
        }

        if (isCheckIn) {
          registrantIdBtn.setAttribute(
            "onclick",
            `handleCheckInOrOutRegistrant("${id}", ${false})`
          );
          registrantIdBtn.classList.remove("d-none", "bg-danger");
          registrantIdText.textContent = "IN";

          registrantIdBtn.classList.add("d-block", "bg-success");
        } else {
          registrantIdBtn.setAttribute(
            "onclick",
            `handleCheckInOrOutRegistrant("${id}", ${true})`
          );
          registrantIdBtn.classList.remove("d-none", "bg-success");
          registrantIdText.textContent = "OUT";

          registrantIdBtn.classList.add("d-block", "bg-danger");
        }
      } catch (error) {
        console.error(error);
      }
    }

    function handleDeleteRegistrant(id) {
      if (!id) return;
      const registrantCard = document.querySelector(`.card-${id}`);
      const registrantId = document.getElementById(`delete-${id}`);
      registrantId.classList.add("d-none");

      const path = `/admin/delete/${id}`;

      const callDelete = async () => {
        try {
          const req = await fetch(path, {
            method: "DELETE",
          });

          const res = await req.json();

          if (res.success) {
            registrantCard.remove();
          }
        } catch (error) {
          console.error(error);
        }
      };

      if (window.confirm("Are you sure you want to delete this registrant?")) {
        callDelete();
      } else {
        registrantId.classList.remove("d-none");
        registrantId.classList.add("d-block");
      }
    }
  </script>
</html>
